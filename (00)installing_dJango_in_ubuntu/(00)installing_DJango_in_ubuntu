installing django in ubuntu 18 dan 19

1.update your local package index with apt:
  "sudo apt update"

2.check which version of Python you have installed. 18.04 ships with Python 3.6 by default, which you can verify by typing:
  "python3 -V"
  You should see output like this:
  "Python 3.7.3"
  if you doesn't install pyhton 3,you try this code in your terminal:
  "sudo apt install python3"

3.Next, install Django:
  "sudo apt install python3-django"
  You can test that the installation was successful by typing:
  "django-admin --version"
  and the output:
  "2.2.5"

4.The most flexible way to install Django on your system is within a virtual environment. We will show you how to install Django in a virtual environment that we will create with the venv module, part of the standard Python 3 library. This tool allows you to create virtual Python environments and install Python packages without affecting the rest of the system. You can therefore select Python packages on a per-project basis, regardless of conflicts with other projects’ requirements.

Let’s begin by refreshing the local package index:

  "sudo apt update"
Next, let’s install pip from the Ubuntu repositories:
  "sudo apt install python3-pip"
Once pip is installed, you can use it to install the venv package:
  "sudo apt install python3-venv"
Now, whenever you start a new project, you can create a virtual environment for it. Start by creating and moving into a new project directory:
  "mkdir django"
  "cd django"

5.Next, create a virtual environment within the project directory using the python command that’s compatible with your version of Python. We will call our virtual environment Env, but you should name it something descriptive:
  "python3.6 -m venv Env"
This will install standalone versions of Python and pip into an isolated directory structure within your project directory. A directory will be created with the name you select, which will hold the file hierarchy where your packages will be installed.
To install packages into the isolated environment, you must activate it by typing:
  "source Env/bin/activate"
Your prompt should change to reflect that you are now in your virtual environment. It will look something like "(Env)username@hostname:~/django$."

6.In your new environment, you can use pip to install Django. Regardless of your Python version, pip should just be called pip when you are in your virtual environment. Also note that you do not need to use sudo since you are installing locally:
  "pip install django"
You can verify the installation by typing:
  "django-admin --version"
output:
  "2.2.5"


